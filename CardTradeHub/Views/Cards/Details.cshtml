@model CardTradeHub.Models.Card
@using System.Security.Claims

@{
    ViewData["Title"] = "Card Details";
}

<div class="container mt-4">
    <h1 class="mb-4">@Model.Title</h1>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-img-container" style="position: relative; padding-bottom: 100%; height: 0; overflow: hidden;">
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="@Model.Title" 
                             style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;">
                    }
                    else
                    {
                        <img src="/images/cards/default.jpg" alt="Default Card Image"
                             style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;">
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="mb-4">
                        <h5 class="text-muted mb-3">Card Information</h5>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Category:</strong></div>
                            <div class="col-8">@Model.Category</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Condition:</strong></div>
                            <div class="col-8">@Model.Condition</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Price:</strong></div>
                            <div class="col-8">$@Model.Price.ToString("N2")</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Status:</strong></div>
                            <div class="col-8">
                                <span class="badge bg-@(Model.Status switch {
                                    "Available" => "success",
                                    "Pending" => "warning",
                                    "Sold" => "info",
                                    _ => "secondary"
                                })">@Model.Status</span>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Listed Date:</strong></div>
                            <div class="col-8">@Model.ListedDate.ToString("MMMM dd, yyyy")</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4"><strong>Seller:</strong></div>
                            <div class="col-8">@Model.User?.UserName</div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5 class="text-muted mb-3">Description</h5>
                        <p class="card-text">@Model.Description</p>
                    </div>
                    
                    <div class="mt-4">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            @if (Model.UserID == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value)
                            {
                                <div class="btn-group">
                                    <a asp-action="Edit" asp-route-id="@Model.CardID" class="btn btn-primary me-2">Edit</a>
                                    <form asp-action="Delete" method="post" onsubmit="return confirm('Are you sure you want to delete this card?');">
                                        <input type="hidden" name="id" value="@Model.CardID" />
                                        <button type="submit" class="btn btn-danger">Delete</button>
                                    </form>
                                </div>
                            }
                            else if (Model.Status == "Available")
                            {
                                <form id="purchaseForm" asp-controller="Transactions" asp-action="InitiatePurchase" method="post" onsubmit="return confirmPurchase(event)">
                                    <input type="hidden" name="cardId" value="@Model.CardID" />
                                    <button type="submit" class="btn btn-success btn-lg w-100">Purchase</button>
                                </form>
                            }
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Login" class="btn btn-primary btn-lg w-100">Login to Purchase</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmPurchase(event) {
            event.preventDefault();
            if (confirm('Are you sure you want to purchase this card for $@Model.Price.ToString("N2")?')) {
                const form = document.getElementById('purchaseForm');
                const formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Purchase successful! The card has been added to your collection.');
                        window.location.href = '/Cards';
                    } else {
                        alert(data.message || 'Purchase failed. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while processing your purchase. Please try again.');
                });
            }
            return false;
        }
    </script>
} 