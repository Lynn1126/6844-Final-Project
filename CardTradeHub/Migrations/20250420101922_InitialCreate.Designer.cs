// <auto-generated />
using System;
using CardTradeHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardTradeHub.Migrations
{
    [DbContext(typeof(CardTradeHubContext))]
    [Migration("20250420101922_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("CardTradeHub.Models.Card", b =>
                {
                    b.Property<int>("CardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CardID");

                    b.HasIndex("UserID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardID = 1,
                            Category = "Pokemon",
                            Condition = "Mint",
                            Description = "First edition Charizard in mint condition",
                            ImageUrl = "/images/cards/charizard.jpg",
                            ListedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 1000.00m,
                            Status = "Available",
                            Title = "Mint Condition Charizard",
                            UserID = 1
                        },
                        new
                        {
                            CardID = 2,
                            Category = "Magic",
                            Condition = "Good",
                            Description = "Rare Black Lotus card from Magic: The Gathering",
                            ImageUrl = "/images/cards/black-lotus.jpg",
                            ListedDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 5000.00m,
                            Status = "Available",
                            Title = "Black Lotus MTG",
                            UserID = 1
                        },
                        new
                        {
                            CardID = 3,
                            Category = "Yu-Gi-Oh",
                            Condition = "Excellent",
                            Description = "Classic Yu-Gi-Oh! card in excellent condition",
                            ImageUrl = "/images/cards/blue-eyes.jpg",
                            ListedDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 500.00m,
                            Status = "Available",
                            Title = "Blue-Eyes White Dragon",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("CardTradeHub.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BuyerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DisputeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisputeReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisputeStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasDispute")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SellerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TransactionID");

                    b.HasIndex("BuyerID");

                    b.HasIndex("CardID");

                    b.HasIndex("SellerID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CardTradeHub.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Customer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@cardtradehub.com",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastLoginDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "AQAAAAEAACcQAAAAEHYxOE9wZQ==",
                            RegisterDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CardTradeHub.Models.Card", b =>
                {
                    b.HasOne("CardTradeHub.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CardTradeHub.Models.Transaction", b =>
                {
                    b.HasOne("CardTradeHub.Models.User", "Buyer")
                        .WithMany("Transactions")
                        .HasForeignKey("BuyerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CardTradeHub.Models.Card", "Card")
                        .WithMany("Transactions")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardTradeHub.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Card");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CardTradeHub.Models.Card", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CardTradeHub.Models.User", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
